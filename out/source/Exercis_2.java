/* autogenerated by Processing revision 1276 on 2021-09-26 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Exercis_2 extends PApplet {

PImage bg;
int maxCar = 10;//the max at once
int maxHum = 40;
Mover[][] moves;
Hum[][] men;

 public void setup() {
    /* size commented out by preprocessor */;
    bg = loadImage("bg.png");
    background(bg);
    //——————————————————————————————
    setCar();
    setHum();
}

 public void draw() {
    background(bg);
    updateMover();
    updateHum();
}

 public void mousePressed() {
    textSize(20);
    text(mouseX, mouseX, mouseY + 20);
    text(mouseY, mouseX + 40, mouseY + 20);
}
/////////
 public void setCar() {
    moves = new Mover[4][maxCar];
    for (int i = 0;i < 4;i++) {
        if (i ==  0 ||  i ==  1) {
            moves[i][0] = new Mover(i,PApplet.parseInt(random( -50,0)));
        } else if (i ==  2 ||  i ==  3) {
            moves[i][0] = new Mover(i,PApplet.parseInt(random(250,300)));
        }
        for (int t = 1;t < maxCar;t++) {
            moves[i][t] = new Mover(i,PApplet.parseInt(moves[i][t - 1].loc.x));
        }
    }
}
 public void updateMover() {
    for (int i = 0;i < 4;i++) {
        for (int t = 0;t < maxCar;t++) {
            moves[i][t].update(i,t,moves);
        }
    }
}
/////////
 public void setHum(){
    men=new Hum[2][maxHum];
    for(int i=0;i<2;i++){
        for (int t=0;t<maxHum;t++){
            men[i][t]=new Hum(i);
        }
    }
}
 public void updateHum(){
    for (int i=0;i<2;i++){
        for(int t=0;t<maxHum;t++){
            men[i][t].update(i);
        }
    }
}
class Hum{
    PImage img;
    PVector loc;
    int dir;//image left/right
    int dirN;//go l 1/r -1
    int imgN;
    float speed = 0.5f;
    
    Hum(int i) {
        setImg();
        setLoc(i);
        image(img,loc.x,loc.y);
    }
     public void update(int i) {
        reset();
        run();
        loc.x = loc.x - speed * dirN;
    }
     public void setLoc(int i) {
        switch(i) {
            case 0 : loc = new PVector(random(0,500),random(80,90));break;
            case 1 : loc = new PVector(random(0,500),random(200,240));break;
        }
    }
     public void reset() {
        speed = random(0.01f,1);
        if ((loc.x < - 20 &&  dir == 0) ||  loc.x>500 &&  dir == 1) {
            switch(dirN) {
                case 1 : loc = new PVector(500,loc.y);break;
                case - 1 : loc = new PVector( -20,loc.y);break;             
            }
            setImg();
        }
    }
     public void setImg() {
        dir = PApplet.parseInt(random(0,2));
        imgN = PApplet.parseInt(random(0,4));
        switch(dir) {
            case 0 : dirN = 1; break;
            case 1 : dirN =-  1; break;
        }
        img = loadImage("man" + imgN + "-" + dir + ".png");
    }
     public void run() {
        int r = PApplet.parseInt(random(28,30));
        //println(r);
        int s = frameCount % r;
        if (s < r/4*3+0.1f) {
            img = loadImage("man" + imgN + "-" + dir + ".png");
        } else if ((s > r/4*3) && (s  < r)) {
            img = loadImage("man" + imgN + "-" + dir + "s.png");
        }    
        image(img,loc.x,loc.y); 
    }
}
/*
int l1=110;
int l2=130;
int r1=190;
int r1=210;
int f1=280;
int f2=300;
int b2=328;
int b2=348;
*/

class Mover {
    int dir;//l-0 r-1 f-2 b-3(for set image)
    int dirN;//left 1 ;right -1(for set dir of way)
    int locY;
    PImage img;
    PVector loc;
    int speed;
    
    Mover(int line,int l) {
        setLoc(line);
        loc = new PVector(speed * PApplet.parseInt(random(50,100)) + l,locY);
        setImg();
    }
    
     public void update(int i,int t,Mover[][] a) {
        image(img, loc.x,loc.y);
        loc.x -= speed*2;
        reset(a,i,t);
    }
    
     public void setImg() {
        int n = PApplet.parseInt(random(0,3));
        for (int i = 0;i < 3;i++) {
            for (int t = 0;t < 4;t++) {
                if ((n == i) && (dir ==  t)) {
                    img = loadImage("car" + i + "-" + t + ".png"); break;
                }
            }      
        }
    }
    
     public void setLoc(int line) {
        switch(line) {
            case 0 : dir = 0; speed = 1; locY = 110;break;
            case 1 : dir = 0; speed = 1; locY = 130;break;
            case 2 : dir = 1; speed = -1; locY = 170;break;
            case 3 : dir = 1; speed = -1; locY = 190;break;
        }
    }
    
     public void reset(Mover[][] a,int i,int t) {
        if ((loc.x < - 20 &&  dir == 0) ||  loc.x>500 &&  dir == 1) {
            setImg();
            if (t ==  0) {
                a[i][t].loc.x = a[i][maxCar - 1].loc.x + PApplet.parseInt(random(30,150)) * speed;
            } else{
                a[i][t].loc.x = a[i][t - 1].loc.x + PApplet.parseInt(random(30,150)) * speed;
            }
            if (dir == 0 && a[i][t].loc.x < 500) {
                a[i][t].loc.x = 500;
            } else if (dir == 1 && a[i][t].loc.x > 0) {
                a[i][t].loc.x = -20;
            }            
        }
        loc.x = a[i][t].loc.x;
    }
}


  public void settings() { size(500, 300, P2D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Exercis_2" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
