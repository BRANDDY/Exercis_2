/* autogenerated by Processing revision 1276 on 2021-09-24 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Exercis_2 extends PApplet {

PImage bg;
int maxN=10;//the max at once
Mover[] movesL1;
Mover[] movesL2;
Mover[] movesR1;
Mover[] movesR2;
//Mover move;

 public void setup() {
    /* size commented out by preprocessor */;
    bg=loadImage("bg.png");
    background(bg);
    //////////////////////////////
    setstart();
}

 public void draw() {
    background(bg);
    updateMover();
}

 public void mousePressed(){
    textSize(20);
    text(mouseX, mouseX, mouseY+20);
    text(mouseY, mouseX+40, mouseY+20);
}

 public void setstart(){
    movesL1 = new Mover[maxN];
    movesL2 = new Mover[maxN];
    movesR1 = new Mover[maxN];
    movesR2 = new Mover[maxN];
    movesL1[0]=new Mover(0,PApplet.parseInt(random(-50,0)),110);
    movesL2[0]=new Mover(0,PApplet.parseInt(random(-50,0)),130);
    movesR1[0]=new Mover(1,PApplet.parseInt(random(250,300)),170);
    movesR2[0]=new Mover(1,PApplet.parseInt(random(250,300)),190);
    for(int i=1;i<maxN;i++){
        movesL1[i]=new Mover(0,PApplet.parseInt(movesL1[i-1].loc.x),110);
        movesL2[i]=new Mover(0,PApplet.parseInt(movesL2[i-1].loc.x),130);
        movesR1[i]=new Mover(1,PApplet.parseInt(movesR1[i-1].loc.x),170);
        movesR2[i]=new Mover(1,PApplet.parseInt(movesR1[i-1].loc.x),190);
    }
}
 public void updateMover(){
    for(int i=0;i<maxN;i++){
        movesL1[i].update(i,movesL1);
        movesL2[i].update(i,movesL2);
        movesR1[i].update(i,movesR1);
        movesR2[i].update(i,movesR2);
    }
}
/*
int l1=110;
int l2=130;
int r1=190;
int r1=210;
int f1=280;
int f2=300;
int b2=328;
int b2=348;
*/

class Mover {
    int dir;//l-0 r-1 f-2 b-3
    PImage img;
    PVector loc;
    int speed;
    
    Mover(int d,int l,int locY) {
        dir = d;
        switch(d) {
            case 0 : speed = 1;break;
            case 1 : speed = -1;break;
        }
        loc = new PVector(speed*PApplet.parseInt(random(50,100))+ l,locY);
        println(loc.x);
        setImg();
    }
    
     public void update(int i,Mover[] a) {
        image(img, loc.x,loc.y);
        loc.x -= speed;
        reset(a,i);
    }
    
     public void setImg() {
        int n = PApplet.parseInt(random(0,3));
            for (int i = 0;i < 3;i++) {
                for (int t = 0;t < 4;t++) {
                    if ((n == i) && (dir ==  t)) {
                        img = loadImage("car" + i + "-" + t + ".png"); break;
                }
            }      
        }
    }
    
     public void reset(Mover[] a,int i) {
        if ((loc.x < - 20 &&  dir == 0) ||  loc.x>500 &&  dir == 1) {
            setImg();
            if (i ==  0) {
                a[i].loc.x = a[maxN-1].loc.x + PApplet.parseInt(random(30,100))*speed;
            } else{
                a[i].loc.x = a[i - 1].loc.x + PApplet.parseInt(random(30,100))*speed;
            }
        }
        loc.x = a[i].loc.x;
    }
}


  public void settings() { size(500, 300, P2D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Exercis_2" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
